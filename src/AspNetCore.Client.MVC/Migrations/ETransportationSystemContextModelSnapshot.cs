// <auto-generated />
using System;
using AspNetCore.Client.MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace asp.net_core_empty_5._0.Migrations
{
    [DbContext(typeof(ETransportationSystemContext))]
    partial class ETransportationSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar");

                    b.Property<double?>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("gender");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("date")
                        .HasColumnName("join_date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.Property<string>("Thumnail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("thumnail");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Username" }, "UKgex1lmaqpg0ir5g1f5eftyaa1")
                        .IsUnique();

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.AccountRole", b =>
                {
                    b.Property<long>("AccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("account_id");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.HasKey("AccountId", "RoleId")
                        .HasName("PK__account___91C2B49111098978");

                    b.HasIndex("RoleId");

                    b.ToTable("account_role", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CityId")
                        .HasColumnType("bigint")
                        .HasColumnName("city_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint")
                        .HasColumnName("district_id");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("street");

                    b.Property<long>("WardId")
                        .HasColumnType("bigint")
                        .HasColumnName("ward_id");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("WardId");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("account_id");

                    b.Property<DateTime?>("BookDate")
                        .HasColumnType("date")
                        .HasColumnName("book_date");

                    b.Property<long>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float")
                        .HasColumnName("total_price");

                    b.Property<long?>("VoucherId")
                        .HasColumnType("bigint")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CarId");

                    b.HasIndex("VoucherId");

                    b.ToTable("book", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("brand", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Car", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("AccountSupplierId")
                        .HasColumnType("bigint")
                        .HasColumnName("account_supplier_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Fuel")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("fuel");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<string>("LicensePlates")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("license_plates");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<long>("ModelId")
                        .HasColumnType("bigint")
                        .HasColumnName("model_id");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("modified_date");

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("date")
                        .HasColumnName("register_date");

                    b.Property<int?>("SaleMonth")
                        .HasColumnType("int")
                        .HasColumnName("sale_month");

                    b.Property<int?>("SaleWeek")
                        .HasColumnType("int")
                        .HasColumnName("sale_week");

                    b.Property<int?>("Seats")
                        .HasColumnType("int")
                        .HasColumnName("seats");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Transmission")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("transmission");

                    b.Property<int?>("YearOfManufacture")
                        .HasColumnType("int")
                        .HasColumnName("year_of_manufacture");

                    b.HasKey("Id");

                    b.HasIndex("AccountSupplierId");

                    b.HasIndex("ModelId");

                    b.ToTable("car", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.CarFeature", b =>
                {
                    b.Property<long>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<long>("FeatureId")
                        .HasColumnType("bigint")
                        .HasColumnName("feature_id");

                    b.HasKey("CarId", "FeatureId")
                        .HasName("PK__car_feat__2B0A610E63CE4323");

                    b.HasIndex("FeatureId");

                    b.ToTable("car_feature", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.CarImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("modified_date");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("car_image", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("city", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CityId")
                        .HasColumnType("bigint")
                        .HasColumnName("city_id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("district", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.DrivingLicense", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_date");

                    b.Property<string>("ImageFront")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image_front");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<long?>("NumberDrivingLicense")
                        .HasColumnType("bigint")
                        .HasColumnName("number_driving_license");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("driving_license", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Feature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Icon")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("feature", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.LikeTable", b =>
                {
                    b.Property<long>("AccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("account_id");

                    b.Property<long>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.HasIndex("CarId");

                    b.HasIndex(new[] { "AccountId", "CarId" }, "UK2g5kr7lkabla2ij2rhwsjwgp4")
                        .IsUnique();

                    b.ToTable("like_table", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint")
                        .HasColumnName("brand_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("model", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("account_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_date");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("discription");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("is_read");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("modified_date");

                    b.Property<string>("ShortDiscription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("short_discription");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("notification", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Review", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("modified_date");

                    b.Property<DateTime?>("ReviewDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("review_date");

                    b.Property<int?>("StarReview")
                        .HasColumnType("int")
                        .HasColumnName("star_review");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("review", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Voucher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("discription");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<int?>("MaxDiscount")
                        .HasColumnType("int")
                        .HasColumnName("max_discount");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("modified_date");

                    b.Property<int?>("Percentage")
                        .HasColumnType("int")
                        .HasColumnName("percentage");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UKpvh1lqheshnjoekevvwla03xn")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("voucher", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Ward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint")
                        .HasColumnName("district_id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("ward", (string)null);
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.AccountRole", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Account", "Account")
                        .WithMany("AccountRoles")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK1f8y4iy71kb1arff79s71j0dh");

                    b.HasOne("asp.net_core_empty_5._0.Models.Role", "Role")
                        .WithMany("AccountRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FKrs2s3m3039h0xt8d5yhwbuyam");

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Address", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FKpo044ng5x4gynb291cv24vtea");

                    b.HasOne("asp.net_core_empty_5._0.Models.District", "District")
                        .WithMany("Addresses")
                        .HasForeignKey("DistrictId")
                        .IsRequired()
                        .HasConstraintName("FKqbjwfi50pdenou8j14knnffrh");

                    b.HasOne("asp.net_core_empty_5._0.Models.Ward", "Ward")
                        .WithMany("Addresses")
                        .HasForeignKey("WardId")
                        .IsRequired()
                        .HasConstraintName("FKq7vspx6bqxq5lawbv2calw5lb");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Book", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Account", "Account")
                        .WithMany("Books")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FKpio94h2hps4iu6xlqp05qnjtr");

                    b.HasOne("asp.net_core_empty_5._0.Models.Car", "Car")
                        .WithMany("Books")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK5ve989unrb6nk6duv2qt7hesc");

                    b.HasOne("asp.net_core_empty_5._0.Models.Voucher", "Voucher")
                        .WithMany("Books")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FKhjcqnudfp654b9ox7msq8rrnn");

                    b.Navigation("Account");

                    b.Navigation("Car");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Car", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Account", "AccountSupplier")
                        .WithMany("Cars")
                        .HasForeignKey("AccountSupplierId")
                        .IsRequired()
                        .HasConstraintName("FKoh7l7b9gk8esqsyiy0i951t1n");

                    b.HasOne("asp.net_core_empty_5._0.Models.Address", "IdNavigation")
                        .WithOne("Car")
                        .HasForeignKey("asp.net_core_empty_5._0.Models.Car", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK3sr9aje2ymv15iu0kar1idwyt");

                    b.HasOne("asp.net_core_empty_5._0.Models.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .IsRequired()
                        .HasConstraintName("FK772uqy9hm5yicyxh9t6x6vusr");

                    b.Navigation("AccountSupplier");

                    b.Navigation("IdNavigation");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.CarFeature", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Car", "Car")
                        .WithMany("CarFeatures")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKd86e0b4v70sx9onvqpf3hc81h");

                    b.HasOne("asp.net_core_empty_5._0.Models.Feature", "Feature")
                        .WithMany("CarFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKgqgv3iyd1518909jkijos3tg3");

                    b.Navigation("Car");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.CarImage", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Car", "Car")
                        .WithMany("CarImages")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK91nl01tvyj0xus5j92voo4ht1");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.District", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FKsgx09prp6sk2f0we38bf2dtal");

                    b.Navigation("City");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.DrivingLicense", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Account", "IdNavigation")
                        .WithOne("DrivingLicense")
                        .HasForeignKey("asp.net_core_empty_5._0.Models.DrivingLicense", "Id")
                        .IsRequired()
                        .HasConstraintName("FKnjx1h1pewb8fspwmfkt3upj4i");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.LikeTable", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FKljri50bbpkqjamm81dljo15qt");

                    b.HasOne("asp.net_core_empty_5._0.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKsgbdbp0r3xpuuk0143gnuqbqw");

                    b.Navigation("Account");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Model", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FKhbgv4j3vpt308sepyq9q79mhu");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Notification", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Account", "Account")
                        .WithMany("Notifications")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FKj0b1ncedmpl7sx7t7o54t26v2");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Review", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.Book", "IdNavigation")
                        .WithOne("Review")
                        .HasForeignKey("asp.net_core_empty_5._0.Models.Review", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKdfvvph8r2jqrhy24rl70jggix");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Ward", b =>
                {
                    b.HasOne("asp.net_core_empty_5._0.Models.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FKslko72wj5nauqvsgefqkvwpsb");

                    b.Navigation("District");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Account", b =>
                {
                    b.Navigation("AccountRoles");

                    b.Navigation("Books");

                    b.Navigation("Cars");

                    b.Navigation("DrivingLicense");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Address", b =>
                {
                    b.Navigation("Car");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Book", b =>
                {
                    b.Navigation("Review");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Car", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("CarFeatures");

                    b.Navigation("CarImages");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.District", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Feature", b =>
                {
                    b.Navigation("CarFeatures");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Model", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Role", b =>
                {
                    b.Navigation("AccountRoles");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Voucher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("asp.net_core_empty_5._0.Models.Ward", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
